{"version":3,"sources":["utils/constants.js","components/Sky.jsx","components/Ground.jsx","utils/formulas.js","components/CannonPipe.jsx","components/CannonBase.jsx","components/CurrentScore.jsx","components/FlyingObjectBase.jsx","components/FlyingObjectTop.jsx","components/FlyingObject.jsx","components/StartGame.jsx","components/Title.jsx","components/CannonBall.jsx","components/Heart.jsx","components/Canvas.jsx","App.js","reportWebVitals.js","actions/index.js","reducers/moveCannonBalls.js","reducers/checkCollisions.js","reducers/moveObjects.js","reducers/createFlyingObjects.js","reducers/startGame.js","reducers/shoot.js","reducers/index.js","containers/Game.js","index.js"],"names":["gameHeight","flyingObjectsStarterPositions","Sky","props","style","fill","x","skyWidth","y","width","height","Ground","groundWidth","id","x1","y1","x2","y2","stroke","strokeWidth","pathFromBezierCurve","cubicBezierCurve","initialAxis","initialControlPoint","endingControlPoint","endingAxis","radiansToDegrees","radians","Math","PI","calculateAngle","quotient","atan","degreesToRadian","degrees","calculateNextPosition","angle","divisor","realAngle","stepsX","cos","stepsY","sin","CannonPipe","cannonPipeStyle","transform","rotation","d","CannonBase","cannonBaseStyle","CurrentScore","filter","fontFamily","fontSize","score","FlyingObjectBase","cx","position","cy","rx","ry","FlyingObjectTop","moveVertically","keyframes","Move","styled","g","FlyingObject","StartGame","button","gameWidth","cursor","onClick","text","textAnchor","Title","textStyle","aliensLineCurve","goHomeLineCurve","xlinkHref","CannonBall","Heart","heartStyle","leftSide","rightSide","Canvas","viewBox","window","innerWidth","lives","i","gameState","heartPosition","push","preserveAspectRatio","onMouseMove","trackMouse","shoot","dx","dy","stdDeviation","cannonBalls","map","cannonBall","kills","started","startGame","flyingObjects","flyingObject","App","useState","canvasMousePosition","updateCanvasMousePosition","event","svg","document","getElementById","point","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","getCanvasPosition","useEffect","onresize","cnv","innerHeight","intervalId","setInterval","moveObjects","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MOVE_OBJECTS","START_GAME","SHOOT","moveBalls","checkCollisions","flyingDiscs","objectsDestroyed","forEach","flyingDisc","currentLifeTime","Date","getTime","createdAt","calculatedPosition","rectA","rectB","checkCollision","cannonBallId","flyingDiscId","state","action","mousePosition","newState","now","lastObjectCreatedAt","length","predefinedPosition","floor","random","newFlyingObject","createFlyingObjects","object","lostLife","cannonBallsDestroyed","flyingDiscsDestroyed","indexOf","initialGameState","initialState","reducer","type","Game","connect","dispatch","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7fdc23ad.chunk.js","sourcesContent":["export const skyAndGroundWidth = 5000;\r\n\r\nexport const gameWidth = 800;\r\n\r\nexport const gameHeight = 1200;\r\n\r\nexport const createInterval = 1000;\r\n\r\nexport const maxFlyingObjects = 4;\r\n\r\nexport const flyingObjectsStarterYAxis = -1100;\r\n\r\nexport const flyingObjectsStarterPositions = [\r\n    -300,\r\n    -150,\r\n    150,\r\n    300,\r\n];","import React from 'react';\r\nimport {skyAndGroundWidth} from \"../utils/constants\";\r\n\r\nfunction Sky(props) {\r\n    const skyStyle = {\r\n        fill: '#30abef',\r\n    };\r\n    const skyWidth = skyAndGroundWidth;\r\n    const gameHeight = 1200;\r\n    return (\r\n        <rect\r\n            style={skyStyle}\r\n            x={skyWidth / -2}\r\n            y={100 - gameHeight}\r\n            width={skyWidth}\r\n            height={gameHeight}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Sky;","import React from 'react';\r\nimport {skyAndGroundWidth} from \"../utils/constants\";\r\n\r\nfunction Ground(props) {\r\n    const groundStyle = {\r\n        fill: '#59a941',\r\n    };\r\n    const division = {\r\n        stroke: '#458232',\r\n        strokeWidth: '3px',\r\n    };\r\n\r\n    const groundWidth = skyAndGroundWidth;\r\n    return (\r\n        <g id=\"ground\">\r\n            <rect\r\n                id=\"ground-2\"\r\n                data-name=\"ground\"\r\n                style={groundStyle}\r\n                x={groundWidth / -2}\r\n                y={0}\r\n                width={groundWidth}\r\n                height={100}\r\n            />\r\n            <line\r\n                x1={groundWidth / -2}\r\n                y1={0}\r\n                x2={groundWidth / 2}\r\n                y2={0}\r\n                style={division}\r\n            />\r\n        </g>\r\n    );\r\n}\r\n\r\nexport default Ground;","export const pathFromBezierCurve = (cubicBezierCurve) => {\r\n    const {\r\n        initialAxis, initialControlPoint, endingControlPoint, endingAxis,\r\n    } = cubicBezierCurve;\r\n    return `\r\n    M${initialAxis.x} ${initialAxis.y}\r\n    c ${initialControlPoint.x} ${initialControlPoint.y}\r\n    ${endingControlPoint.x} ${endingControlPoint.y}\r\n    ${endingAxis.x} ${endingAxis.y}\r\n  `;\r\n};\r\n\r\nexport const radiansToDegrees = radians => ((radians * 180) / Math.PI);\r\n\r\n// https://math.stackexchange.com/questions/714378/find-the-angle-that-creating-with-y-axis-in-degrees\r\nexport const calculateAngle = (x1, y1, x2, y2) => {\r\n    if (x2 >= 0 && y2 >= 0) {\r\n        return 90;\r\n    } else if (x2 < 0 && y2 >= 0) {\r\n        return -90;\r\n    }\r\n\r\n    const dividend = x2 - x1;\r\n    const divisor = y2 - y1;\r\n    const quotient = dividend / divisor;\r\n    return radiansToDegrees(Math.atan(quotient)) * -1;\r\n};\r\n\r\nexport const getCanvasPosition = (event) => {\r\n    // mouse position on auto-scaling canvas\r\n    // https://stackoverflow.com/a/10298843/1232793\r\n\r\n    const svg = document.getElementById('aliens-go-home-canvas');\r\n    const point = svg.createSVGPoint();\r\n\r\n    point.x = event.clientX;\r\n    point.y = event.clientY;\r\n    const { x, y } = point.matrixTransform(svg.getScreenCTM().inverse());\r\n    return {x, y};\r\n};\r\n\r\nconst degreesToRadian = degrees => ((degrees * Math.PI) / 180);\r\n\r\nexport const calculateNextPosition = (x, y, angle, divisor = 300) => {\r\n    const realAngle = (angle * -1) + 90;\r\n    const stepsX = radiansToDegrees(Math.cos(degreesToRadian(realAngle))) / divisor;\r\n    const stepsY = radiansToDegrees(Math.sin(degreesToRadian(realAngle))) / divisor;\r\n    return {\r\n        x: x +stepsX,\r\n        y: y - stepsY,\r\n    }\r\n};\r\n\r\nexport const checkCollision = (rectA, rectB) => (\r\n    rectA.x1 < rectB.x2 && rectA.x2 > rectB.x1 &&\r\n    rectA.y1 < rectB.y2 && rectA.y2 > rectB.y1\r\n);","import React from 'react';\r\nimport {pathFromBezierCurve} from \"../utils/formulas\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction CannonPipe(props) {\r\n    const cannonPipeStyle = {\r\n        fill: '#999',\r\n        stroke: '#666',\r\n        strokeWidth: '2px',\r\n    };\r\n    const transform = `rotate(${props.rotation}, 0, 0)`;\r\n\r\n    const muzzleWidth = 40;\r\n    const halfMuzzle = 20;\r\n    const height = 100;\r\n    const yBasis = 70;\r\n\r\n    const cubicBezierCurve = {\r\n        initialAxis: {\r\n            x: -halfMuzzle,\r\n            y: -yBasis,\r\n        },\r\n        initialControlPoint: {\r\n            x: -40,\r\n            y: height * 1.7,\r\n        },\r\n        endingControlPoint: {\r\n            x: 80,\r\n            y: height * 1.7,\r\n        },\r\n        endingAxis: {\r\n            x: muzzleWidth,\r\n            y: 0,\r\n        },\r\n    };\r\n    return (\r\n        <g transform={transform}>\r\n            <path\r\n                style={cannonPipeStyle}\r\n                d={pathFromBezierCurve(cubicBezierCurve)}\r\n            />\r\n            <line\r\n                x1={-halfMuzzle}\r\n                y1={-yBasis}\r\n                x2={halfMuzzle}\r\n                y2={-yBasis}\r\n                style={cannonPipeStyle}\r\n            />\r\n        </g>\r\n    );\r\n}\r\n\r\nCannonPipe.propTypes = {\r\n    rotation: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CannonPipe;","import React from 'react';\r\nimport {pathFromBezierCurve} from \"../utils/formulas\";\r\n\r\nfunction CannonBase(props) {\r\n    const cannonBaseStyle = {\r\n        fill: '#a16012',\r\n        stroke: '#75450e',\r\n        strokeWidth: '2px',\r\n    };\r\n\r\n    const baseWith = 80;\r\n    const halfBase = 40;\r\n    const height = 60;\r\n    const negativeHeight = height * -1;\r\n\r\n    const cubicBezierCurve = {\r\n        initialAxis: {\r\n            x: -halfBase,\r\n            y: height,\r\n        },\r\n        initialControlPoint: {\r\n            x: 20,\r\n            y: negativeHeight,\r\n        },\r\n        endingControlPoint: {\r\n            x: 60,\r\n            y: negativeHeight,\r\n        },\r\n        endingAxis: {\r\n            x: baseWith,\r\n            y: 0,\r\n        },\r\n    };\r\n    return (\r\n        <g>\r\n            <path\r\n                style={cannonBaseStyle}\r\n                d={pathFromBezierCurve(cubicBezierCurve)}\r\n            />\r\n            <line\r\n                x1={-halfBase}\r\n                y1={height}\r\n                x2={halfBase}\r\n                y2={height}\r\n                style={cannonBaseStyle}\r\n            />\r\n        </g>\r\n    );\r\n}\r\n\r\nexport default CannonBase;","import PropTypes from \"prop-types\";\r\n\r\nconst CurrentScore = (props) => {\r\n    const scoreStyle = {\r\n        fontFamily: '\"Joti One\", cursive',\r\n        fontSize: 80,\r\n        fill: '#d6d33e',\r\n    };\r\n\r\n    return (\r\n        <g filter=\"url(#shadow)\">\r\n            <text style={scoreStyle} x=\"300\" y=\"80\">\r\n                {props.score}\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nCurrentScore.propTypes = {\r\n    score: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default CurrentScore;","import PropTypes from \"prop-types\";\r\n\r\nconst FlyingObjectBase = (props) => {\r\n    const style = {\r\n        fill: '#979797',\r\n        stroke: '#5c5c5c',\r\n    };\r\n\r\n    return (\r\n        <ellipse\r\n            cx={props.position.x}\r\n            cy={props.position.y}\r\n            rx=\"40\"\r\n            ry=\"10\"\r\n            style={style}\r\n        />\r\n    );\r\n};\r\n\r\nFlyingObjectBase.propTypes = {\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired,\r\n};\r\n\r\nexport default FlyingObjectBase;","import {pathFromBezierCurve} from \"../utils/formulas\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FlyingObjectTop = (props) => {\r\n    const style = {\r\n        fill: '#b6b6b6',\r\n        stroke: '#7d7d7d',\r\n    };\r\n\r\n    const baseWith = 40;\r\n    const halfBase = 20;\r\n    const height = 25;\r\n\r\n    const cubicBezierCurve = {\r\n        initialAxis: {\r\n            x: props.position.x - halfBase,\r\n            y: props.position.y,\r\n        },\r\n        initialControlPoint: {\r\n            x: 10,\r\n            y: -height,\r\n        },\r\n        endingControlPoint: {\r\n            x: 30,\r\n            y: -height,\r\n        },\r\n        endingAxis: {\r\n            x: baseWith,\r\n            y: 0,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <path\r\n            style={style}\r\n            d={pathFromBezierCurve(cubicBezierCurve)}\r\n        />\r\n    );\r\n};\r\n\r\nFlyingObjectTop.propTypes = {\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired,\r\n};\r\n\r\nexport default FlyingObjectTop;","import FlyingObjectBase from \"./FlyingObjectBase\";\r\nimport FlyingObjectTop from \"./FlyingObjectTop\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled, {keyframes} from \"styled-components\";\r\nimport {gameHeight} from \"../utils/constants\";\r\n\r\nconst moveVertically = keyframes`\r\n  0% {\r\n    transform: translateY(0);\r\n  }\r\n  100% {\r\n    transform: translateY(${gameHeight}px);\r\n  }\r\n`;\r\n\r\nconst Move = styled.g`\r\n  animation: ${moveVertically} 4s linear;\r\n`;\r\n\r\nconst FlyingObject = props => (\r\n    <Move>\r\n        <FlyingObjectBase position={props.position} />\r\n        <FlyingObjectTop position={props.position} />\r\n    </Move>\r\n);\r\n\r\nFlyingObject.propTypes = {\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired,\r\n};\r\n\r\nexport default FlyingObject;","import {gameWidth} from \"../utils/constants\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StartGame = (props) => {\r\n    const button = {\r\n        x: gameWidth / -2, // половина ширины\r\n        y: -280, // минус значит \"над\" (выше нуля)\r\n        width: gameWidth,\r\n        height: 200,\r\n        rx: 10, // border радиус\r\n        ry: 10, // border радиус\r\n        style: {\r\n            fill: 'transparent',\r\n            cursor: 'pointer',\r\n        },\r\n        onClick: props.onClick,\r\n    };\r\n\r\n    const text = {\r\n        textAnchor: 'middle', // центр\r\n        x: 0, // центр относительно оси X\r\n        y: -150, // 150 выше нуля (по оси Y)\r\n        style: {\r\n            fontFamily: '\"Joti One\", cursive',\r\n            fontSize: 60,\r\n            fill: '#e3e3e3',\r\n            cursor: 'pointer',\r\n        },\r\n        onClick: props.onClick,\r\n    };\r\n    return (\r\n        <g filter=\"url(#shadow)\">\r\n            <rect {...button} />\r\n            <text {...text}>\r\n                Tap To Start!\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nStartGame.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default StartGame;","import {pathFromBezierCurve} from \"../utils/formulas\";\r\n\r\nconst Title = () => {\r\n    const textStyle = {\r\n        fontFamily: '\"Joti One\", cursive',\r\n        fontSize: 120,\r\n        fill: '#cbca62',\r\n    };\r\n\r\n    const aliensLineCurve = {\r\n        initialAxis: {\r\n            x: -190,\r\n            y: -950,\r\n        },\r\n        initialControlPoint: {\r\n            x: 95,\r\n            y: -50,\r\n        },\r\n        endingControlPoint: {\r\n            x: 285,\r\n            y: -50,\r\n        },\r\n        endingAxis: {\r\n            x: 380,\r\n            y: 0,\r\n        },\r\n    };\r\n\r\n    const goHomeLineCurve = {\r\n        ...aliensLineCurve,\r\n        initialAxis: {\r\n            x: -250,\r\n            y: -780,\r\n        },\r\n        initialControlPoint: {\r\n            x: 125,\r\n            y: -90,\r\n        },\r\n        endingControlPoint: {\r\n            x: 375,\r\n            y: -90,\r\n        },\r\n        endingAxis: {\r\n            x: 500,\r\n            y: 0,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <g filter=\"url(#shadow)\">\r\n            <defs>\r\n                <path\r\n                    id=\"AliensPath\"\r\n                    d={pathFromBezierCurve(aliensLineCurve)}\r\n                />\r\n                <path\r\n                    id=\"GoHomePath\"\r\n                    d={pathFromBezierCurve(goHomeLineCurve)}\r\n                />\r\n            </defs>\r\n            <text {...textStyle}>\r\n                <textPath xlinkHref=\"#AliensPath\">\r\n                    Aliens,\r\n                </textPath>\r\n            </text>\r\n            <text {...textStyle}>\r\n                <textPath xlinkHref=\"#GoHomePath\">\r\n                    Go Home!\r\n                </textPath>\r\n            </text>\r\n        </g>\r\n    );\r\n};\r\n\r\nexport default Title;","import PropTypes from \"prop-types\";\r\n\r\nconst CannonBall = (props) => {\r\n    const ballStyle = {\r\n        fill: '#777',\r\n        stroke: '#444',\r\n        strokeWidth: '2px',\r\n    };\r\n    return (\r\n        <ellipse\r\n            style={ballStyle}\r\n            cx={props.position.x}\r\n            cy={props.position.y}\r\n            rx=\"16\"\r\n            ry=\"16\"\r\n        />\r\n    );\r\n};\r\n\r\nCannonBall.propTypes = {\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired,\r\n};\r\n\r\nexport default CannonBall;","import {pathFromBezierCurve} from \"../utils/formulas\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Heart = (props) => {\r\n    const heartStyle = {\r\n        fill: '#da0d15',\r\n        stroke: '#a51708',\r\n        strokeWidth: '2px',\r\n    };\r\n\r\n    const leftSide = {\r\n        initialAxis: {\r\n            x: props.position.x,\r\n            y: props.position.y,\r\n        },\r\n        initialControlPoint: {\r\n            x: -20,\r\n            y: -20,\r\n        },\r\n        endingControlPoint: {\r\n            x: -40,\r\n            y: 10,\r\n        },\r\n        endingAxis: {\r\n            x: 0,\r\n            y: 40,\r\n        },\r\n    };\r\n\r\n    const rightSide = {\r\n        initialAxis: {\r\n            x: props.position.x,\r\n            y: props.position.y,\r\n        },\r\n        initialControlPoint: {\r\n            x: 20,\r\n            y: -20,\r\n        },\r\n        endingControlPoint: {\r\n            x: 40,\r\n            y: 10,\r\n        },\r\n        endingAxis: {\r\n            x: 0,\r\n            y: 40,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <g filter=\"url(#shadow)\">\r\n            <path\r\n                style={heartStyle}\r\n                d={pathFromBezierCurve(leftSide)}\r\n            />\r\n            <path\r\n                style={heartStyle}\r\n                d={pathFromBezierCurve(rightSide)}\r\n            />\r\n        </g>\r\n    );\r\n};\r\n\r\nHeart.propTypes = {\r\n    position: PropTypes.shape({\r\n        x: PropTypes.number.isRequired,\r\n        y: PropTypes.number.isRequired\r\n    }).isRequired,\r\n};\r\n\r\nexport default Heart;","import Sky from \"./Sky\";\r\nimport Ground from \"./Ground\";\r\nimport CannonPipe from \"./CannonPipe\";\r\nimport CannonBase from \"./CannonBase\";\r\nimport PropTypes from \"prop-types\";\r\nimport CurrentScore from \"./CurrentScore\";\r\nimport FlyingObject from \"./FlyingObject\";\r\nimport StartGame from \"./StartGame\";\r\nimport Title from \"./Title\";\r\nimport {gameHeight} from \"../utils/constants\";\r\nimport CannonBall from \"./CannonBall\";\r\nimport Heart from \"./Heart\";\r\n\r\nfunction Canvas(props) {\r\n    const viewBox = [window.innerWidth / -2, 100 - gameHeight, window.innerWidth, gameHeight];\r\n\r\n    const lives = [];\r\n    for (let i = 0; i < props.gameState.lives; i++) {\r\n        const heartPosition = {\r\n            x: -180 - (i * 70),\r\n            y: 35\r\n        };\r\n        lives.push(<Heart key={i} position={heartPosition}/>);\r\n    }\r\n\r\n    return (\r\n        <svg\r\n            id=\"aliens-go-home-canvas\"\r\n            preserveAspectRatio=\"xMaxYMax none\"\r\n            onMouseMove={props.trackMouse}\r\n            viewBox={viewBox}\r\n            onClick={props.shoot}\r\n        >\r\n            <defs>\r\n                <filter id=\"shadow\">\r\n                    <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"2\"/>\r\n                </filter>\r\n            </defs>\r\n            <Sky/>\r\n            <Ground/>\r\n            {props.gameState.cannonBalls.map(cannonBall => (\r\n                <CannonBall\r\n                    key={cannonBall.id}\r\n                    position={cannonBall.position}\r\n                />\r\n            ))}\r\n            <CannonPipe rotation={props.angle}/>\r\n            <CannonBase/>\r\n            <CurrentScore score={props.gameState.kills} />\r\n\r\n            {!props.gameState.started &&\r\n            <g>\r\n                <StartGame onClick={() => props.startGame()}/>\r\n                <Title/>\r\n            </g>\r\n            }\r\n\r\n            {props.gameState.started &&\r\n            <g>\r\n                {props.gameState.flyingObjects.map(flyingObject => (\r\n                    <FlyingObject\r\n                        key={flyingObject.id}\r\n                        position={flyingObject.position}\r\n                    />\r\n                ))}\r\n            </g>\r\n            }\r\n            {lives}\r\n        </svg>\r\n    );\r\n}\r\n\r\nCanvas.propTypes = {\r\n    angle: PropTypes.number.isRequired,\r\n    gameState: PropTypes.shape({\r\n        started: PropTypes.bool.isRequired,\r\n        kills: PropTypes.number.isRequired,\r\n        lives: PropTypes.number.isRequired,\r\n        flyingObjects: PropTypes.arrayOf(PropTypes.shape({\r\n            position: PropTypes.shape({\r\n                x: PropTypes.number.isRequired,\r\n                y: PropTypes.number.isRequired\r\n            }).isRequired,\r\n            id: PropTypes.number.isRequired,\r\n        })).isRequired,\r\n    }).isRequired,\r\n    trackMouse: PropTypes.func.isRequired,\r\n    startGame: PropTypes.func.isRequired,\r\n    shoot: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Canvas;","import Canvas from \"./components/Canvas\";\nimport PropTypes from \"prop-types\";\nimport {useEffect, useState} from \"react\";\nimport {getCanvasPosition} from \"./utils/formulas\";\n\nfunction App(props) {\n    const [canvasMousePosition, updateCanvasMousePosition] = useState();\n\n    useEffect(() => {\n        window.onresize = () => {\n            const cnv = document.getElementById('aliens-go-home-canvas');\n            cnv.style.width = `${window.innerWidth}px`;\n            cnv.style.height = `${window.innerHeight}px`;\n        };\n        window.onresize();\n    })\n\n    useEffect(() => {\n        const intervalId = setInterval(() => {\n            props.moveObjects(canvasMousePosition);\n        }, 10);\n        return () => clearInterval(intervalId); //This is important\n    }, [canvasMousePosition])\n\n    function trackMouse(event) {\n        updateCanvasMousePosition(getCanvasPosition(event));\n    }\n\n    function shoot() {\n        props.shoot(canvasMousePosition)\n    }\n\n    return (\n        <Canvas\n            angle={props.angle}\n            gameState={props.gameState}\n            startGame={props.startGame}\n            trackMouse={event => (trackMouse(event))}\n            shoot={shoot}\n        />\n    )\n}\n\nApp.propTypes = {\n    angle: PropTypes.number.isRequired,\n    gameState: PropTypes.shape({\n        started: PropTypes.bool.isRequired,\n        kills: PropTypes.number.isRequired,\n        lives: PropTypes.number.isRequired,\n        flyingObjects: PropTypes.arrayOf(PropTypes.shape({\n            position: PropTypes.shape({\n                x: PropTypes.number.isRequired,\n                y: PropTypes.number.isRequired\n            }).isRequired,\n            id: PropTypes.number.isRequired,\n        })).isRequired,\n    }).isRequired,\n    moveObjects: PropTypes.func.isRequired,\n    startGame: PropTypes.func.isRequired,\n    shoot: PropTypes.func.isRequired,\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const MOVE_OBJECTS = 'MOVE_OBJECTS';\r\nexport const START_GAME = 'START_GAME';\r\nexport const SHOOT = 'SHOOT';\r\n\r\nexport const moveObjects = mousePosition => ({\r\n    type: MOVE_OBJECTS,\r\n    mousePosition,\r\n});\r\n\r\nexport const startGame = () => ({\r\n    type: START_GAME,\r\n});\r\n\r\nexport const shoot = (mousePosition) => ({\r\n    type: SHOOT,\r\n    mousePosition,\r\n});","import {calculateNextPosition} from \"../utils/formulas\";\r\n\r\nconst moveBalls = cannonBalls => (\r\n    cannonBalls\r\n        .filter(cannonBall => (\r\n            cannonBall.position.y > -800 && cannonBall.position.x > -500 && cannonBall.position.x < 500\r\n        ))\r\n        .map((cannonBall) => {\r\n            const { x, y } = cannonBall.position;\r\n            const { angle } = cannonBall;\r\n            return {\r\n                ...cannonBall,\r\n                position: calculateNextPosition(x, y, angle, 5),\r\n            };\r\n        })\r\n);\r\n\r\nexport default moveBalls;","import {gameHeight} from \"../utils/constants\";\r\nimport {checkCollision} from \"../utils/formulas\";\r\n\r\nconst checkCollisions = (cannonBalls, flyingDiscs) => {\r\n    const objectsDestroyed = [];\r\n    flyingDiscs.forEach((flyingDisc) => {\r\n        const currentLifeTime = (new Date()).getTime() - flyingDisc.createdAt;\r\n        const calculatedPosition = {\r\n            x: flyingDisc.position.x,\r\n            y: flyingDisc.position.y + ((currentLifeTime / 4000) * gameHeight),\r\n        };\r\n        const rectA = {\r\n            x1: calculatedPosition.x - 40,\r\n            y1: calculatedPosition.y - 10,\r\n            x2: calculatedPosition.x + 40,\r\n            y2: calculatedPosition.y + 10,\r\n        };\r\n        cannonBalls.forEach((cannonBall) => {\r\n            const rectB = {\r\n                x1: cannonBall.position.x - 8,\r\n                y1: cannonBall.position.y - 8,\r\n                x2: cannonBall.position.x + 8,\r\n                y2: cannonBall.position.y + 8,\r\n            };\r\n            if (checkCollision(rectA, rectB)) {\r\n                objectsDestroyed.push({\r\n                    cannonBallId: cannonBall.id,\r\n                    flyingDiscId: flyingDisc.id,\r\n                });\r\n            }\r\n        });\r\n    });\r\n    return objectsDestroyed;\r\n};\r\n\r\nexport default checkCollisions;","import {calculateAngle} from \"../utils/formulas\";\r\nimport createFlyingObjects from \"./createFlyingObjects\";\r\nimport moveBalls from \"./moveCannonBalls\";\r\nimport checkCollisions from \"./checkCollisions\";\r\n\r\nfunction moveObjects(state, action) {\r\n    if (!state.gameState.started) return state;\r\n\r\n    let cannonBalls = moveBalls(state.gameState.cannonBalls);\r\n\r\n    const mousePosition = action.mousePosition || {\r\n        x: 0,\r\n        y: 0,\r\n    };\r\n\r\n    const newState = createFlyingObjects(state);\r\n\r\n    const now = (new Date()).getTime();\r\n\r\n    let flyingObjects = newState.gameState.flyingObjects.filter(object => (\r\n        (now - object.createdAt) < 4000\r\n    ));\r\n\r\n    const lostLife = state.gameState.flyingObjects.length > flyingObjects.length;\r\n    let lives = state.gameState.lives;\r\n    if (lostLife) {\r\n        lives--;\r\n    }\r\n\r\n    const started = lives > 0;\r\n    if (!started) {\r\n        flyingObjects = [];\r\n        cannonBalls = [];\r\n        lives = 3;\r\n    }\r\n\r\n    const { x, y } = mousePosition;\r\n    const angle = calculateAngle(0, 0, x, y);\r\n\r\n    const objectsDestroyed = checkCollisions(cannonBalls, flyingObjects);\r\n    const cannonBallsDestroyed = objectsDestroyed.map(object => (object.cannonBallId));\r\n    const flyingDiscsDestroyed = objectsDestroyed.map(object => (object.flyingDiscId));\r\n\r\n    cannonBalls = cannonBalls.filter(cannonBall => (cannonBallsDestroyed.indexOf(cannonBall.id)));\r\n    flyingObjects = flyingObjects.filter(flyingDisc => (flyingDiscsDestroyed.indexOf(flyingDisc.id)));\r\n\r\n    const kills = state.gameState.kills + flyingDiscsDestroyed.length;\r\n\r\n    return {\r\n        ...newState,\r\n        gameState: {\r\n            ...newState.gameState,\r\n            flyingObjects,\r\n            cannonBalls: [...cannonBalls],\r\n            lives,\r\n            started,\r\n            kills,\r\n        },\r\n        angle,\r\n    };\r\n}\r\n\r\nexport default moveObjects;","import {\r\n    createInterval,\r\n    flyingObjectsStarterPositions,\r\n    flyingObjectsStarterYAxis,\r\n    maxFlyingObjects\r\n} from \"../utils/constants\";\r\n\r\nexport default (state) => {\r\n    if ( ! state.gameState.started) return state; // игра не запущена\r\n\r\n    const now = (new Date()).getTime();\r\n    const { lastObjectCreatedAt, flyingObjects } = state.gameState;\r\n    const createNewObject = (\r\n        now - (lastObjectCreatedAt).getTime() > createInterval &&\r\n        flyingObjects.length < maxFlyingObjects\r\n    );\r\n\r\n    if ( ! createNewObject) return state; // нет нужды создавать новые объекты в данный момент\r\n\r\n    const id = (new Date()).getTime();\r\n    const predefinedPosition = Math.floor(Math.random() * maxFlyingObjects);\r\n    const flyingObjectPosition = flyingObjectsStarterPositions[predefinedPosition];\r\n    const newFlyingObject = {\r\n        position: {\r\n            x: flyingObjectPosition,\r\n            y: flyingObjectsStarterYAxis,\r\n        },\r\n        createdAt: (new Date()).getTime(),\r\n        id,\r\n    };\r\n\r\n    return {\r\n        ...state,\r\n        gameState: {\r\n            ...state.gameState,\r\n            flyingObjects: [\r\n                ...state.gameState.flyingObjects,\r\n                newFlyingObject\r\n            ],\r\n            lastObjectCreatedAt: new Date(),\r\n        }\r\n    }\r\n}","export default (state, initialGameState) => {\r\n    return {\r\n        ...state,\r\n        gameState: {\r\n            ...initialGameState,\r\n            started: true,\r\n        }\r\n    }\r\n};","import {calculateAngle} from \"../utils/formulas\";\r\n\r\nfunction shoot(state, action) {\r\n    if (!state.gameState.started) return state;\r\n\r\n    const { cannonBalls } = state.gameState;\r\n\r\n    if (cannonBalls.length === 2) return state;\r\n\r\n    const { x, y } = action.mousePosition;\r\n\r\n    const angle = calculateAngle(0, 0, x, y);\r\n\r\n    const id = (new Date()).getTime();\r\n    const cannonBall = {\r\n        position: { x: 0, y: 0 },\r\n        angle,\r\n        id,\r\n    };\r\n\r\n    return {\r\n        ...state,\r\n        gameState: {\r\n            ...state.gameState,\r\n            cannonBalls: [...cannonBalls, cannonBall],\r\n        }\r\n    };\r\n}\r\n\r\nexport default shoot;","import {MOVE_OBJECTS, SHOOT, START_GAME} from \"../actions\";\r\nimport moveObjects from \"./moveObjects\";\r\nimport startGame from \"./startGame\";\r\nimport shoot from \"./shoot\";\r\n\r\nconst initialGameState = {\r\n    started: false,\r\n    kills: 0,\r\n    lives: 3,\r\n    flyingObjects: [],\r\n    lastObjectCreatedAt: new Date(),\r\n    cannonBalls: [],\r\n};\r\n\r\nconst initialState = {\r\n    angle: 45,\r\n    gameState: initialGameState,\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case MOVE_OBJECTS:\r\n            return moveObjects(state, action);\r\n        case START_GAME:\r\n            return startGame(state, initialGameState);\r\n        case SHOOT:\r\n            return shoot(state, action)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import {connect} from \"react-redux\";\r\nimport App from \"../App\";\r\nimport {moveObjects, shoot, startGame} from \"../actions\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        angle: state.angle,\r\n        gameState: state.gameState,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    moveObjects: (mousePosition) => {\r\n        dispatch(moveObjects(mousePosition));\r\n    },\r\n    startGame: () => {\r\n        dispatch(startGame())\r\n    },\r\n    shoot: (mousePosition) => {\r\n        dispatch(shoot(mousePosition))\r\n    }\r\n});\r\n\r\nconst Game = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(App);\r\n\r\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from \"redux\";\nimport reducer from \"./reducers\";\nimport {Provider} from \"react-redux\";\nimport Game from \"./containers/Game\";\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Game />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}